{"version":3,"sources":["cli.js"],"names":["yata","require","nconf","log","module","exports","argv","env","file","getConfigPath","get","apiHost","validateConfig","downloadTranslation","locales","locale"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,8FAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf;AACAH,UAAAA,KAAK,CAACI,IAAN,GAFe,CAIf;;AACAJ,UAAAA,KAAK,CAACK,GAAN,GALe,CAOf;;AACAL,UAAAA,KAAK,CAACM,IAAN,CAAW;AAAEA,YAAAA,IAAI,EAAER,IAAI,CAACS,aAAL,CAAmBP,KAAK,CAACQ,GAAN,CAAU,QAAV,CAAnB;AAAR,WAAX,EARe,CAUf;;AACAV,UAAAA,IAAI,CAACW,OAAL,GAAeT,KAAK,CAACQ,GAAN,CAAU,eAAV,KAA8B,wBAA7C;AAXe;;AAAA,eAcTV,IAAI,CAACY,cAAL,CACFV,KAAK,CAACQ,GAAN,CAAUR,KAAK,CAACQ,GAAN,CAAU,OAAV,CAAV,CADE,EAEFR,KAAK,CAACQ,GAAN,CAAU,SAAV,CAFE,EAGFR,KAAK,CAACQ,GAAN,CAAU,SAAV,CAHE,EAIFR,KAAK,CAACQ,GAAN,CAAU,QAAV,CAJE,EAKFR,KAAK,CAACQ,GAAN,CAAU,MAAV,CALE,EAMFR,KAAK,CAACQ,GAAN,CAAU,YAAV,CANE,EAOFR,KAAK,CAACQ,GAAN,CAAU,aAAV,CAPE,CAdS;AAAA;AAAA;AAAA;;AAAA,eAwBPR,KAAK,CAACQ,GAAN,CAAU,QAAV,CAxBO;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAyBHV,IAAI,CAACa,mBAAL,CAAyBX,KAAK,CAACQ,GAAN,CAAU,QAAV,CAAzB,CAzBG;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDA2BUV,IAAI,CAACc,OA3Bf;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BAC,UAAAA,MA3BA;AAAA;AAAA,iBA4BDf,IAAI,CAACa,mBAAL,CAAyBE,MAAzB,CA5BC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiCbZ,UAAAA,GAAG,CAAC,KAAD,cAAH;;AAjCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["const yata = require('./yata');\nconst nconf = require('nconf');\nconst log = require('./log');\n\nmodule.exports = async function() {\n  // read argv for potential custom config path\n  nconf.argv();\n\n  // read ENV for token\n  nconf.env();\n\n  // load config path\n  nconf.file({ file: yata.getConfigPath(nconf.get('config')) });\n\n  // setup API host\n  yata.apiHost = nconf.get('YATA_API_HOST') || 'https://api.yatapp.net';\n\n  try {\n    if (yata.validateConfig(\n      nconf.get(nconf.get('token')),\n      nconf.get('project'),\n      nconf.get('locales'),\n      nconf.get('format'),\n      nconf.get('root'),\n      nconf.get('outputPath'),\n      nconf.get('strip_empty'))) {\n\n      // if passed locale explicit download just one\n      if (nconf.get('locale')) {\n        await yata.downloadTranslation(nconf.get('locale'));\n      } else {\n        for (let locale of yata.locales) {\n          await yata.downloadTranslation(locale);\n        }\n      }\n    }\n  } catch (e) {\n    log('red', e);\n  }\n};\n"],"file":"cli.js"}