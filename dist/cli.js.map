{"version":3,"sources":["cli.js"],"names":["yata","require","nconf","log","module","exports","argv","env","file","getConfigPath","get","apiHost","validateConfig","downloadTranslation","locale","locales","e"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,QAAR,CAAb;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,MAAME,MAAMF,QAAQ,OAAR,CAAZ;;AAEAG,OAAOC,OAAP,qBAAiB,aAAiB;AAChC;AACAH,QAAMI,IAAN;;AAEA;AACAJ,QAAMK,GAAN;;AAEA;AACAL,QAAMM,IAAN,CAAW,EAAEA,MAAMR,KAAKS,aAAL,CAAmBP,MAAMQ,GAAN,CAAU,QAAV,CAAnB,CAAR,EAAX;;AAEA;AACAV,OAAKW,OAAL,GAAeT,MAAMQ,GAAN,CAAU,eAAV,KAA8B,wBAA7C;;AAEA,MAAI;AACF,QAAIV,KAAKY,cAAL,CACFV,MAAMQ,GAAN,CAAUR,MAAMQ,GAAN,CAAU,OAAV,CAAV,CADE,EAEFR,MAAMQ,GAAN,CAAU,SAAV,CAFE,EAGFR,MAAMQ,GAAN,CAAU,SAAV,CAHE,EAIFR,MAAMQ,GAAN,CAAU,QAAV,CAJE,EAKFR,MAAMQ,GAAN,CAAU,MAAV,CALE,EAMFR,MAAMQ,GAAN,CAAU,YAAV,CANE,CAAJ,EAM4B;;AAE1B;AACA,UAAIR,MAAMQ,GAAN,CAAU,QAAV,CAAJ,EAAyB;AACvB,cAAMV,KAAKa,mBAAL,CAAyBX,MAAMQ,GAAN,CAAU,QAAV,CAAzB,CAAN;AACD,OAFD,MAEO;AACL,aAAK,IAAII,MAAT,IAAmBd,KAAKe,OAAxB,EAAiC;AAC/B,gBAAMf,KAAKa,mBAAL,CAAyBC,MAAzB,CAAN;AACD;AACF;AACF;AACF,GAlBD,CAkBE,OAAOE,CAAP,EAAU;AACVb,QAAI,KAAJ,EAAWa,CAAX;AACD;AACF,CAlCD","file":"cli.js","sourcesContent":["const yata = require('./yata');\nconst nconf = require('nconf');\nconst log = require('./log');\n\nmodule.exports = async function() {\n  // read argv for potential custom config path\n  nconf.argv();\n\n  // read ENV for token\n  nconf.env();\n\n  // load config path\n  nconf.file({ file: yata.getConfigPath(nconf.get('config')) });\n\n  // setup API host\n  yata.apiHost = nconf.get('YATA_API_HOST') || 'http://api.yatapp.net/';\n\n  try {\n    if (yata.validateConfig(\n      nconf.get(nconf.get('token')),\n      nconf.get('project'),\n      nconf.get('locales'),\n      nconf.get('format'),\n      nconf.get('root'),\n      nconf.get('outputPath'))) {\n\n      // if passed locale explicit download just one\n      if (nconf.get('locale')) {\n        await yata.downloadTranslation(nconf.get('locale'));\n      } else {\n        for (let locale of yata.locales) {\n          await yata.downloadTranslation(locale);\n        }\n      }\n    }\n  } catch (e) {\n    log('red', e);\n  }\n};\n"]}